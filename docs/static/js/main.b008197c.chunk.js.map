{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categs","type","value","onChange","target","GifGridItem","url","title","className","src","alt","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","catch","console","error","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACE,0BAAMC,SATc,SAACC,GACrBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAM,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAQT,EACRU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YCNdG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MAChC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKH,EAAKI,IAAKH,IACpB,2BAAIA,K,uBCHGI,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACFC,MAAM,IAAD,OAHR,uCAGQ,oBAJX,mCAIW,cAAuCC,UAAUH,GAAjD,cADH,cACfI,EADe,gBAEEA,EAAKC,OAFP,uBAEbC,EAFa,EAEbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,IAC3B,MAAO,CACLC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXD,IAAG,UAAEe,EAAIE,cAAN,iBAAE,EAAYC,wBAAd,aAAE,EAA8BlB,QARlB,kBAcda,GAdc,2CAAH,sDCCPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEdpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAU,WAERlB,EAAQC,GACLkB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACrBV,KAAMa,EACNL,SAAS,OAEVM,MAAMC,QAAQC,SAEhB,CAACtB,IAEGe,EDf0BQ,CAAavB,GAAhCW,EAFuB,EAE7BL,KAAcQ,EAFe,EAEfA,QAEtB,OACE,oCACA,wBAAIlB,UAAU,qCAAqCI,GAEjDc,GAAW,uBAAGlB,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAETe,EAAOH,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACEe,IAAKf,EAAIC,IACJD,UEQJgB,EAvBM,WAAO,IAAD,EAEW7C,mBAAS,CAAC,aAFrB,mBAElB8C,EAFkB,KAEN/C,EAFM,KAIzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEI+C,EAAWlB,KAAK,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CACEwB,IAAKxB,EACLA,SAAUA,U,MCdxB2B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b008197c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(inputValue.trim().length > 2){\r\n      setCategories(categs => [inputValue, ...categs]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\" \r\n        value={ inputValue }\r\n        onChange={handleInputChange}\r\n       />\r\n    </form>\r\n  )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({url, title}) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","const apiKey = 'eC71549EVDbEJNtsy7e9kDt6WOdiH95p';\r\nconst searchUrl = 'https://api.giphy.com/v1/gifs/search';\r\n\r\nexport const getGifs = async (category) => { \r\n  const resp = await fetch(` ${searchUrl}?api_key=${apiKey}&q=${ encodeURI(category) }&limit=10`);\r\n  const { data } = await resp.json();\r\n  // console.log(data);\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium?.url\r\n    };\r\n  });\r\n  \r\n  // console.log(gifs);\r\n\r\n  return gifs;\r\n};","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  const { data: images, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n    <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n    { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n    <div className=\"card-grid\">\r\n        {\r\n          images.map(img =>\r\n            <GifGridItem \r\n              key={img.id} \r\n              { ...img}\r\n              />\r\n          )\r\n        }\r\n    </div>\r\n    </>\r\n  )\r\n;}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    getGifs(category)\r\n      .then(imgs => setState({\r\n        data: imgs,\r\n        loading: false\r\n      }))\r\n      .catch(console.error);\r\n\r\n  }, [category]);\r\n\r\n  return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Windsurf']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map( category => \r\n            <GifGrid \r\n              key={category}\r\n              category={category} />\r\n          )\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}